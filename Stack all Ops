#include<stdio.h>
#include<stdlib.h>

struct stack
{
  int size;
  int top;
  int *arr;
};

int
isEmpty (struct stack *ptr)
{
  if (ptr->top == -1)
    return 1;
  return 0;
}

int
isFull (struct stack *ptr)
{
  if (ptr->top == ptr->size - 1)
    return 1;
  else
    return 0;

}

int
push (struct stack *ptr, int val)
{
  if (isFull (ptr))
    {
      printf ("\n stack overflow cannot push %d to stack\n", val);
      return -1;
    }

  else
    {
      ptr->top++;
      ptr->arr[ptr->top] = val;
      return 1;
    }
}


int
pop (struct stack *ptr)
{
  if (isEmpty (ptr))
    {
      printf ("Stack Underflow cannot pop\n");
      return -1;
    }
  else
    {
      int val = ptr->arr[ptr->top];
      ptr->top--;
      return val;
    }
}

int
main ()
{

  struct stack *sp = (struct stack *) malloc (sizeof (struct stack));
  sp->size = 10;
  sp->top = -1;
  sp->arr = (int *) malloc (sp->size * sizeof (int));
  printf ("Stack has been created successfully\n\n");

  printf ("Before pushing : full %d\n", isFull (sp));
  printf ("Before pushing : Empty %d\n", isEmpty (sp));


  for (int j = 110; j < 120; j++)
    {
      push (sp, j);
    }

  printf ("After pushing : full %d\n", isFull (sp));
  printf ("After pushing : Empty %d\n\n", isEmpty (sp));

  for (int j = 1; j < 10; j++)
    {
      printf ("popped %d from the stack\n", pop (sp));
    }

  return 0;
}

